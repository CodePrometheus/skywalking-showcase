version: '2.1'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:${ES_VERSION}
    networks: [ sw ]
    ports:
      - "9200:9200"
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1

  oap:
    image: ${OAP_IMAGE}
    networks: [ sw ]
    environment:
      SW_HEALTH_CHECKER: default
      SW_TELEMETRY: prometheus
      SW_STORAGE: elasticsearch
      SW_STORAGE_ES_CLUSTER_NODES: elasticsearch:9200
      JAVA_OPTS: "-Xms2048m -Xmx2048m"
    healthcheck:
      test: [ "CMD-SHELL", "/skywalking/bin/swctl ch" ]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      elasticsearch:
        condition: service_healthy

  rocket-bot:
    image: ${ROCKET_BOT_IMAGE}
    networks: [ sw ]
    ports:
      - "9999:8080"
    depends_on:
      oap:
        condition: service_healthy
    environment:
      SW_OAP_ADDRESS: http://oap:12800

  gateway:
    image: ${HUB}/gateway-service:${TAG}
    networks: [ sw ]
    environment:
      SW_AGENT_NAME: gateway
      SW_AGENT_COLLECTOR_BACKEND_SERVICES: oap:11800
    healthcheck:
      test: [ "CMD-SHELL", "wget http://localhost/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      oap:
        condition: service_healthy
      songs:
        condition: service_healthy

  songs:
    image: ${HUB}/songs-service:${TAG}
    networks: [ sw ]
    environment:
      SW_AGENT_NAME: songs
      SW_AGENT_COLLECTOR_BACKEND_SERVICES: oap:11800
    healthcheck:
      test: [ "CMD-SHELL", "wget http://localhost/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      oap:
        condition: service_healthy

  rcmd:
    image: ${HUB}/recommendation-service:${TAG}
    networks: [ sw ]
    environment:
      SW_AGENT_NAME: recommendation
      SW_AGENT_COLLECTOR_BACKEND_SERVICES: oap:11800
    healthcheck:
      test: [ "CMD-SHELL", "curl http://localhost/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      oap:
        condition: service_healthy

  loadgen:
    image: curlimages/curl
    networks: [ sw ]
    depends_on:
      gateway:
        condition: service_healthy
    entrypoint:
      - sh
      - -c
      - |
        while true; do
          curl http://gateway/songs/top
          curl http://gateway/songs/favorites
          sleep 3
        done

networks:
  sw:
