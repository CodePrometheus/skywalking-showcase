# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# @feature: pretend these Pods are virtual machines

---
apiVersion: v1
kind: Service
metadata:
  name: vm
spec:
  selector:
    app: vm
  ports:
    - protocol: TCP
      port: 9100

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vm-deployment
  labels:
    app: vm
spec:
  replicas: 2
  selector:
    matchLabels:
      app: vm
  template:
    metadata:
      labels:
        app: vm
    spec:
      containers:
        - name: vm
          image: quay.io/prometheus/node-exporter:v1.2.2
          resources:
            limits:
              cpu: 100m
              memory: "128Mi"
          ports:
            - containerPort: 9100
              name: metrics

# @feature: vm; set OpenTelemetry config to scrape the VM metrics
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-conf-vm
  labels:
    app: otel-vm
data:
  otel-collector-config: |
    receivers:
      prometheus:
        config:
          scrape_configs:
            # @feature: vm; this is only for demo, in real scenarios the VM addresses should be static, not via service discovery
            - job_name: 'vm-monitoring'
              metrics_path: '/metrics'
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - source_labels: [__meta_kubernetes_pod_container_name, __meta_kubernetes_pod_container_port_name]
                  action: keep
                  regex: vm;metrics # @feature: vm; reference the name of the metrics port
                - source_labels: []
                  target_label: service
                  replacement: vm
                - source_labels: [__meta_kubernetes_pod_name]
                  target_label: host_name
                  regex: (.+)
                  replacement: $$1

    exporters:
      opencensus:
        endpoint: "oap:11800"
        insecure: true
      logging:
        logLevel: debug

    service:
      pipelines:
        metrics:
          receivers: [ prometheus ]
          exporters: [ opencensus,logging ]

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-deployment-vm
  labels:
    app: otel-vm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: otel-vm
  template:
    metadata:
      labels:
        app: otel-vm
    spec:
      serviceAccountName: otel-sa-vm
      containers:
        - name: otel-vm
          image: otel/opentelemetry-collector:0.29.0
          command:
            - "/otelcol"
            - "--config=/conf/otel-collector-config.yaml"
          volumeMounts:
            - name: otel-collector-config-vol-vm
              mountPath: /conf
      volumes:
        - name: otel-collector-config-vol-vm
          configMap:
            name: otel-collector-conf-vm
            items:
              - key: otel-collector-config
                path: otel-collector-config.yaml
